<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="88c82c1e-739d-4e8c-9eac-59bd39679b92" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectId" id="1Ph1sxsODDhbdatea4StwqPbYZc" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/types" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/types" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Test.go test github.com/looking-4-justice/range/tests">
    <configuration name="TestNonExistingNumberToRangeTitleErrorsOut in github.com/looking-4-justice/range/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="range" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/looking-4-justice/range/tests" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestNonExistingNumberToRangeTitleErrorsOut$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNumberToRangeTitleReturnsSliceWhenMoreThanOneMatchFound in github.com/looking-4-justice/range/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="range" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/looking-4-justice/range/tests" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestNumberToRangeTitleReturnsSliceWhenMoreThanOneMatchFound$" />
      <method v="2" />
    </configuration>
    <configuration name="TestTitleToExistingRange in github.com/looking-4-justice/range/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="range" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/looking-4-justice/range/tests" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestTitleToExistingRange$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/looking-4-justice/range/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="range" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/looking-4-justice/range/tests" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="gobench github.com/looking-4-justice/range/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="range" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <framework value="gobench" />
      <kind value="PACKAGE" />
      <package value="github.com/looking-4-justice/range/tests" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test github.com/looking-4-justice/range/tests" />
        <item itemvalue="Go Test.TestTitleToExistingRange in github.com/looking-4-justice/range/tests" />
        <item itemvalue="Go Test.gobench github.com/looking-4-justice/range/tests" />
        <item itemvalue="Go Test.TestNonExistingNumberToRangeTitleErrorsOut in github.com/looking-4-justice/range/tests" />
        <item itemvalue="Go Test.TestNumberToRangeTitleReturnsSliceWhenMoreThanOneMatchFound in github.com/looking-4-justice/range/tests" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>